<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RTMP on Min-Jae Lee</title><link>https://blog.mjlee.ga/tags/rtmp/</link><description>Recent content in RTMP on Min-Jae Lee</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 31 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mjlee.ga/tags/rtmp/index.xml" rel="self" type="application/rss+xml"/><item><title>RTMP</title><link>https://blog.mjlee.ga/wiki/rtmp/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/wiki/rtmp/</guid><description>Adobe&amp;rsquo; Real-Time Message Protocol Introduction Summary of RTMP Protocol, consider production ready about live streaming service. From librtmp(within ffmpeg; used in obs studio), obs studio&amp;rsquo;s implementation.
Terminology The key words &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;NOT RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; in this document are to be interpreted as described in RFC2119.
Syntax Handshake Handshake Phase Version (IVersion, RVersion) RTMP protocol version negotiation.
(def boxes-per-row 4) (draw-column-headers) (draw-box &amp;#34;version&amp;#34; {:span 4}) struct hversion_t { uint8_t version; } : 8; version: Initiator send supported protocol version information.</description></item><item><title>Impl. live streaming system - RTMP: Analyzy OBS studio's implementaion(librtmp-based)</title><link>https://blog.mjlee.ga/live-streaming/rtmp/analyze-obs/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rtmp/analyze-obs/</guid><description>Introduction There is no document that explain fully described RTMP specification. So, I don&amp;rsquo;t know what RPC methods, and there logic.
In this series&amp;rsquo;s design, Ingest receive RTMP stream from video streaming sw such as OBS studio, xsplit, or prism. And Ingest passthrough stream into transcoder that depend on ffmpeg.
I don&amp;rsquo;t know xsplit and prism&amp;rsquo;s rtmp implementation. But, OBS studio is open source and it use librtmp that rtmp implementation from ffmpeg(exactly, rtmpdump from mplayer).</description></item><item><title>Impl. live streaming system - RTMP: Chunking</title><link>https://blog.mjlee.ga/live-streaming/rtmp/chunking/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rtmp/chunking/</guid><description>Introduction Chunking provides multiplexes multiple chunk stream.
(def row-header-fn {}) (def boxes-per-row 12) (draw-box &amp;#34;Basic Header&amp;#34; {:span 3}) (draw-box &amp;#34;Message Header&amp;#34; {:span 4}) (draw-box &amp;#34;Extended Timestamp&amp;#34; {:span 5}) (draw-gap &amp;#34;Payload&amp;#34;) (draw-bottom) Default Chunk size is 128 bytes. Chunk size is maximum length of payload. So, If you want to send 200 bytes. than that message split into 2 chunk. (like below diagram)
(def row-header-fn {}) (def boxes-per-row 12) (draw-box &amp;#34;Basic Header&amp;#34; {:span 3}) (draw-box &amp;#34;Message Header&amp;#34; {:span 4}) (draw-gap &amp;#34;Payload (128 bytes)&amp;#34;) (draw-bottom) (draw-box &amp;#34;Basic Header&amp;#34; {:span 3}) (draw-gap &amp;#34;Payload (72 bytes)&amp;#34;) (draw-bottom) Header Basic header cs_id is chunk stream id that indicates following chunk&amp;rsquo;s stream context.</description></item><item><title>Impl. live streaming system - RTMP: Introduction &amp; Basic Handshake</title><link>https://blog.mjlee.ga/live-streaming/rtmp/handshake/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rtmp/handshake/</guid><description>Introduction RTMP Protocol is a set of these three things
Handshake Check reliable stream transport Chunk Stream Multiplexing Packetizing Message Video/Audio RPC RTMP is message multiplexing protocol, not only media service.
Adobeâ€™s Real Time Messaging Protocol (RTMP) provides a bidirectional message multiplex service over a reliable stream transport, such as TCP [RFC0793], intended to carry parallel streams of video, audio, and data messages, with associated timing information, between a pair of communicating peers.</description></item></channel></rss>