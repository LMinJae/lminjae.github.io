<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Min-Jae Lee</title><link>https://blog.mjlee.ga/tags/development/</link><description>Recent content in Development on Min-Jae Lee</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.mjlee.ga/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Impl. live streaming system - RTMP: Chunking</title><link>https://blog.mjlee.ga/live-streaming/rtmp/chunking/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rtmp/chunking/</guid><description>Introduction Chunking provides multiplexes multiple chunk stream.
(def row-header-fn {}) (def boxes-per-row 12) (draw-box &amp;quot;Basic Header&amp;quot; {:span 3}) (draw-box &amp;quot;Message Header&amp;quot; {:span 4}) (draw-box &amp;quot;Extended Timestamp&amp;quot; {:span 5}) (draw-gap &amp;quot;Payload&amp;quot;) (draw-bottom) Default Chunk size is 128 bytes. Chunk size is maximum length of payload. So, If you want to send 200 bytes. than that message split into 2 chunk. (like below diagram)
(def row-header-fn {}) (def boxes-per-row 12) (draw-box &amp;quot;Basic Header&amp;quot; {:span 3}) (draw-box &amp;quot;Message Header&amp;quot; {:span 4}) (draw-gap &amp;quot;Payload (128 bytes)&amp;quot;) (draw-bottom) (draw-box &amp;quot;Basic Header&amp;quot; {:span 3}) (draw-gap &amp;quot;Payload (72 bytes)&amp;quot;) (draw-bottom) Header Basic header cs_id is chunk stream id that indicates following chunk&amp;rsquo;s stream context.</description></item><item><title>Impl. live streaming system - RTMP: Introduction &amp; Basic Handshake</title><link>https://blog.mjlee.ga/live-streaming/rtmp/handshake/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rtmp/handshake/</guid><description>Introduction RTMP Protocol is a set of these three things
Handshake Check reliable stream transport Chunk Stream Multiplexing Packetizing Message Video/Audio RPC RTMP is message multiplexing protocol, not only media service.
Adobeâ€™s Real Time Messaging Protocol (RTMP) provides a bidirectional message multiplex service over a reliable stream transport, such as TCP [RFC0793], intended to carry parallel streams of video, audio, and data messages, with associated timing information, between a pair of communicating peers.</description></item><item><title>Impl. live streaming system: Rough design</title><link>https://blog.mjlee.ga/live-streaming/rough-design/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/rough-design/</guid><description>Introduction In previous post, I select RTMP and HLS with CMAF as a protocol between service and end-users(streamers and viewers).
flowchart LR p(Streamer) subgraph Service Provider i(Ingest) t(Transcoder) e(Edge) end s(Viewer) p --&amp;gt;|RTMP| i i --&amp;gt; t t --&amp;gt; e e --&amp;gt;|HLS\CMAF| s Each layers(Ingest, Transcoder, Edge) have different requirements.
Whole system require Low-Latency, High-Available and Low-Cost.
So, detail system will be like this.
flowchart LR p(Streamer) subgraph .</description></item><item><title>Impl. live streaming system: Intro</title><link>https://blog.mjlee.ga/live-streaming/intro/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.mjlee.ga/live-streaming/intro/</guid><description>Introduction I choose live streaming as the first project for posting. because it can be expanded widely in these days and future.
This article is a decision to select protocols for both streamer and viewer.
Define live streaming as Real-Time(low-latency) Video/Audio Delivery service. live streaming + low latency bi-directional communication =&amp;gt; game streaming service In this series, I want to cover the whole flow are explained below from scratch as possible as possible.</description></item></channel></rss>